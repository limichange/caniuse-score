{"version":3,"sources":["atom.ts","StateSwitch.tsx","ListItem.tsx","App.tsx","useCaniuseJsonData.ts","index.tsx"],"names":["globalAtom","atomWithStorage","allStatus","none","knowIt","usedIt","masterIt","StateSwitch","props","item","children","useAtom","selectValue","setSelectValue","selectOnChange","useCallback","e","currentTarget","value","toString","onChange","style","display","width","marginRight","Object","keys","map","key","ListItem","itemData","caniuseData","data","caniuseLink","status","marginTop","fontSize","color","usage_perc_y","alignItems","title","description","rel","target","href","role","Score","total","score","console","log","scoreMap","entries","App","useState","setData","useEffect","fetch","then","res","json","useCaniuseJsonData","featureKeys","useMemo","className","Date","updated","toISOString","length","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.010667c1.chunk.js","sourcesContent":["import { atomWithStorage } from \"jotai/utils\";\nimport { allStatusKeys } from \"./StateSwitch\";\n\nexport const globalAtom = atomWithStorage<{ [key: string]: allStatusKeys }>(\n  \"global\",\n  {}\n);\n","import { FC, FormEvent, useCallback } from \"react\";\nimport { useAtom } from \"jotai\";\nimport { globalAtom } from \"./atom\";\n\nexport const allStatus = {\n  none: \"-\",\n  knowIt: \"Konw it\",\n  usedIt: \"Used it\",\n  masterIt: \"Master it\"\n};\n\nexport type allStatusKeys = keyof typeof allStatus;\n\nexport interface StateSwitchProps {\n  item: string;\n}\n\nexport const StateSwitch: FC<StateSwitchProps> = (props) => {\n  const { item, children } = props;\n  const [selectValue, setSelectValue] = useAtom(globalAtom);\n\n  const selectOnChange = useCallback(\n    (e: FormEvent<HTMLSelectElement>) => {\n      setSelectValue({\n        ...selectValue,\n        [item]: e.currentTarget.value.toString() as allStatusKeys\n      });\n    },\n    [setSelectValue, selectValue, item]\n  );\n\n  return (\n    <>\n      <select\n        onChange={selectOnChange}\n        value={selectValue[item]}\n        style={{ display: \"block\", width: 80, marginRight: 8 }}\n      >\n        {Object.keys(allStatus).map((item) => {\n          const key = item as allStatusKeys;\n\n          return (\n            <option value={key} key={key}>\n              {allStatus[key]}\n            </option>\n          );\n        })}\n      </select>\n\n      {children}\n    </>\n  );\n};\n","import { FC } from \"react\";\nimport { Caniuse } from \"./Caniuse\";\nimport { allStatusKeys, StateSwitch } from \"./StateSwitch\";\nimport {} from \"jotai/utils\";\nimport { useAtom } from \"jotai\";\nimport { globalAtom } from \"./atom\";\n\nexport interface ListItemProps {\n  item: string;\n  caniuseData: Caniuse;\n}\n\nfunction getColorByStatus(key: allStatusKeys): string {\n  const colors = {\n    masterIt: \"orange\",\n    knowIt: \"blue\",\n    usedIt: \"blueviolet\",\n    none: \"inherit\"\n  };\n\n  return colors[key] || \"inherit\";\n}\n\nexport const ListItem: FC<ListItemProps> = (props) => {\n  const { item, caniuseData } = props;\n  const itemData = caniuseData.data[item];\n  const caniuseLink = `https://caniuse.com/${item}`;\n  const [selectValue] = useAtom(globalAtom);\n  const status = selectValue[item] as allStatusKeys;\n\n  return (\n    <li\n      style={{\n        marginTop: 2,\n        fontSize: 18,\n        color: itemData.usage_perc_y < 60 ? \"gray\" : \"black\",\n        display: \"flex\",\n        alignItems: \"center\"\n      }}\n      key={item}\n    >\n      <label\n        title={itemData.description}\n        style={{\n          color: getColorByStatus(status),\n          display: \"flex\",\n          alignItems: \"center\",\n          marginRight: 6\n        }}\n      >\n        <StateSwitch item={item}></StateSwitch>\n        {itemData.title} ({itemData.usage_perc_y}%)\n      </label>\n\n      <a\n        rel=\"noreferrer\"\n        target=\"_blank\"\n        title={caniuseLink}\n        href={caniuseLink}\n      >\n        <span aria-label=\"caniuse link\" role=\"img\">\n          ðŸ”—\n        </span>\n      </a>\n    </li>\n  );\n};\n","import \"./styles.css\";\nimport { useCaniuseJsonData } from \"./useCaniuseJsonData\";\nimport { ListItem } from \"./ListItem\";\nimport { FC, useMemo } from \"react\";\nimport { globalAtom } from \"./atom\";\nimport { useAtom } from \"jotai\";\n\nconst Score: FC<{ total: number }> = (props) => {\n  const { total } = props;\n  const [value] = useAtom(globalAtom);\n  let score = 0;\n\n  console.log(\"value\", value);\n\n  const scoreMap = {\n    masterIt: 3,\n    usedIt: 2,\n    knowIt: 1,\n    none: 0\n  };\n\n  for (const [, item] of Object.entries(value)) {\n    score += scoreMap[item] ?? 0;\n  }\n\n  return (\n    <h2>\n      Score: {score} / {total * 3}\n    </h2>\n  );\n};\n\nexport default function App() {\n  const caniuseData = useCaniuseJsonData();\n  const featureKeys = useMemo(() => Object.keys(caniuseData?.data || {}), [\n    caniuseData\n  ]);\n\n  if (!caniuseData) {\n    return <h1>Loading...</h1>;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Can i use - Can you use</h1>\n      <p>Updated: {new Date(caniuseData.updated * 1000).toISOString()}</p>\n      <p>Feature: {featureKeys.length}</p>\n      <Score total={featureKeys.length} />\n\n      <ul>\n        {featureKeys.map((item) => (\n          <ListItem caniuseData={caniuseData} item={item} key={item} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport type { Caniuse } from \"./Caniuse\";\n\nexport function useCaniuseJsonData() {\n  const [data, setData] = useState<Caniuse | null>(null);\n\n  useEffect(() => {\n    if (data) {\n      return;\n    }\n\n    fetch(\"https://raw.githubusercontent.com/Fyrd/caniuse/main/data.json\")\n      .then((res) => res.json())\n      .then((json) => {\n        setData(json);\n      });\n  }, [data]);\n\n  return data;\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}